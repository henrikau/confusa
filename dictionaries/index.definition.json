{
	"unauth_welcome_1": {
		"en": "This service allows you to get or deactive a personal certificate."
	},
	"unauth_login_notice": {
		"en": "To use this service, you will need to log in."
	},
	"auth_welcome_1": {
		"en": "You have successfully authenticated to your home organization, and you can now use the rest of the portal."
	},
	"auth_warning_1": {
		"en": "Do NOT use this service from a PC that you share with other people. Your new personal certificate will be stored on this PC."
	},
	"index_faq_heading1": {
		"en": "How does it work?"
	},
	"index_faq_text1": {
		"en": "The basis for it is trust. We trust your home institution to autheniticate you correctly and the Online-CA trusts Confusa to do its job properly.  Your home institution already identified you when you signed up with it, so why verify the same information twice or three times?"
	},
	"index_faq_heading2": {
		"en": "How long are the certificates valid?"
	},
	"index_faq_text2": {
		"en": "It depends on the Certificate Authority, but normally it is valid for at least 1 year."
	},
	"index_faq_heading3": {
		"en": "Why do I have to login?"
	},
	"index_faq_text3": {
		"en": "Before we can issue a certificate to <i>you</i>, we need to be sure about <i>who</i> you are. Your home institution can do this much better than what we can ever hope to do, so we delegate this task. This way we can focus on what's important, to issue certificates as quickly and user-friendly as possible."
	},
	"index_faq_heading4": {
		"en": "Does Confusa store my private data?"
	},
	"index_faq_text4": {
		"en": "Privacy has been a very big concern in the design of Confusa. When you login, Confusa doesn't store any data about you! Only if you get a certificate issued by Confusa, Confusa and/or the Online-CA store the subject name of that certificate. Such a subject name usually contains your country, organization and full name. We <b>have</b> to store that information."
	},
	"index_faq_heading5": {
		"en": "What is this 'Confusa' I see everywhere?"
	},
	"index_faq_text5": {
		"en": "'Confusa' is the name of the portal software. This means that the portal <i>is</i> Confusa, yet it is not. A bit like the spoon. If you really want to know, have a look at <a href='http://www.confusa.org'>www.confusa.org</a>"
	},
    "index_faq_heading6": {
		"en": "How do I create a CSR?"
	},
	"index_faq_text6": {
		"en": "<p>The easiest way is to use the browser directly.</p>  <p>    If you <b>really</b> need to use the command-line, you should      consider using the <a href='http://www.openssl.org'>OpenSSL</a>      toolkit for the creation of certificate signing requests. OpenSSL      comes pre-installed with most Linux distributions and MacOS X. The      OpenSSL project also offers      an <a href='http://www.openssl.org/related/binaries.html'> OpenSSL      for Windows</a> download.  </p>    <p>    Once you have OpenSSL installed on your platform, use it to generate    a CSR by typing:  </p>  <p class='example'>    openssl req -new -newkey rsa:2048 -keyout userkey.pem -out usercert_request.pem -subj /CN=bla  </p>  <ul class='help'>    <li>      The generated file <b>userkey.pem</b> is your private key and      should during all the validity time of the certificate be kept by      you and <b>only</b> you.    </li>    <li>      You should also define a <span class='wtf' title='more than 8      characters, not in the dictionary, include numbers'> strong      password</span> when asked for it.    </li>    <li>      The file, which you upload to Confusa to request a certificate      is <b>usercert_request.pem</b>.    </li></ul>  <b>Note</b>: If Confusa uses the Comodo-CA, the subject of the request  can be arbitrary, as shown above, because Confusa will replace it with  real values matching you, once it issues the certificate!"
	},
    "index_faq_heading7": {
		"en": "Which browsers are supported for browser requests"
	},
	"index_faq_text7": {
		"en": "<ul class='help'><li>Mozilla based browsers (Firefox, SeaMonkey)</li><li>Internet Explorer (on Windows XP, Vista, 7)</li><li>Apple Safari (on MacOS X)</li><li>Google Chrome (on Windows, Linux)</li><li>Opera</li></ul>These browsers are <b>not</b> supported at the moment:<ul class='help'><li>Apple Safari on the iPhone/iPad</li><li>Internet Explorer on old Windows versions</li><li>Google Chrome on MacOS X</li></ul>"
	},
    "index_faq_heading8": {
		"en": "How to export certificates from the keystore"
	},
	"index_faq_text8": {
		"en": "<b>Firefox:</b>  <ul class='help'>    <li>Go to Preferences</li>    <li>- Advanced</li>    <li>- View Certificates</li>    <li>- Your certificates</li>    <li>Then press 'Backup' on the certificate you want to      backup, which will create a PKCS#12 file on your harddisk.</li>    </ul>  <b>Opera:</b>  <ul class='help'>    <li>Go to Preferences</li>    <li> - Advanced</li>    <li> - Security</li>    <li> - Manage Certificates</li>    <li> Select your certificate and click 'Export'. </li>    <li>Select PKCS#12 format.</li>  </ul>  <b>Internet Explorer:</b>  <ul class='help'>    <li> Go to Internet</li>    <li> - Options</li>    <li> - Content</li>    <li> - Certificates</li>    <li> Click the certificate you want to export and click 'export'.</li>    <li> Confirm that you want to include the private key</li>    <li> Select PKCS#12 format and 'enable strong protection'.</li>  </ul>  <b>Safari/Mac OS X:</b>  Your certificate should be automatically added to the keyring.  <br /><br />  <b>Chrome/Windows:</b>It works the same way as with Internet Explorer."
	},
    "index_faq_heading9": {
		"en": "How to convert between PKCS#12 and X.509"
	},
	"index_faq_text9": {
		"en": "If you have a PKCS#12 certificate but want it in PEM format (e.g. for Grid job submission), do the following: <br /> <br /> Private key: <p class='example'>   openssl pkcs12  -nocerts -in cert.p12 -out ~user/.globus/userkey.pem </p> <br /> Public key: <p class='example'>   openssl pkcs12 -clcerts  -nokeys -in cert.p12 -out ~user/.globus/usercert.pem </p> <br /> Subsequently, give them the right permissions:<br /> <p class='example'>   chmod 0600 userkey.pem<br />   chmod 0644 usercert.pem </p>"
	},
    "index_faq_text9_escience": {
        "en": "<p>  <b>Note!</b> you need to use OpenSSL version 0.9.X, because   currently, most grid software cannot handle certificates converted   with OpenSSL 1.X.</p>"
    },
    "index_faq_heading10": {
		"en": "How to export certificates from the keystore (Chrome/Linux)!"
	},
	"index_faq_text10": {
		"en": "<p>   Instead of having it's own certificate management facilities, on Linux   Google chrome ties into libnss3-tools. See   the <a href='http://code.google.com/p/chromium/wiki/LinuxCertManagement'>     Chrome documentatio</a>n on certificate management. On   the downside, users will not have a very nice graphical interface to   manage their certificates. On the other downside, the certutil command   is not very easy to use. On the upside, it is rather powerful. </p> <p>   So after issuing a certificate, it can be checked whether it is   present as one of the user's certificates: </p> <p class='example'>   certutil -d sql:$HOME/.pki/nssdb -L </p> <p>   Unfortunately the auto-generated cert id makes all cert operations an   input-hazzle. List the details of a certificate: </p> <p class='example'>   certutil -d sql:$HOME/.pki/nssdb -L -n Confusa\\ Test\\ User\\ Full\\   Name\\ aeoeaa\\ confusatest@feide.no\\'s\\ TERENA\\ eScience\\ Personal\\ CA\\   ID </p> <p>   To export the certificate, from the NSS3 database, pk12util has to be   used because certutil can only export the public key: </p> <p class='example'>   pk12util -d sql:$HOME/.pki/nssdb -o cert.p12 -n Confusa\\ Test\\ User\\   Full\\ Name\\ aeoeaa\\ confusatest@feide.no\\'s\\ TERENA\\ eScience\\   Personal\\ CA\\ ID </p> <p>Now that the certificate has been exported in PKCS#12 format, it   needs to be <a href='#pkcs12'>converted to PKCS#7 format</a> in order   to be used with the Globus/Grid software. </p> "
	},
    "index_faq_heading11": {
        "en": "How to import CA certificates into Chrome"
    },
    "index_faq_text11": {
        "en": "Automatic import via the Chrome browser does not work. Instead the   certificate has to be downloaded to the harddrive. Opening the browser   options, navigating to 'Under the hood' and clicking on the   'Certificate Management' button, will bring up Windows' integrated   certificate management. There the certificate can be imported."
    },
    "index_faq_heading12": {
        "en": "Importing the CA certificate (Linux)"
    },
    "index_faq_text12": {
        "en": " Our friend CertUtil will have to help us with importing again. First   we download the CA-cert from the CA section of the portal and then we   import it with certutil. -t T,c,c tells cert-util that the certificate   can serve as a well CA for client certificates in SSL and is a valid   CA for S/MIME and JAR. <p class='example'>   certutil -d sql:$HOME/.pki/nssdb -A -n terena_escience_ca -t T,c,c -i   TERENAeSciencePersonalCA.crt </p>"
    },
    "index_info_about_you" : {
        "en": "Info about you"
    },
	"attribute_info1": {
		"en": "This is the information we have received from your home organization combined with information added to this portal for your home organization"
	},
	"attribute_info2": {
		"en": "and subscriber"
	},
	"attribute_name": {
		"en": "Name:"
	},
	"attribute_email": {
		"en": "E-mail address:"
	},
	"attribute_entitlement": {
		"en": "Entitlement:"
	},
	"attribute_eppn": {
		"en": "Unique Name:"
	},
	"attribute_orgname": {
		"en": "Home organization:"
	},
	"attribute_country": {
		"en": "Country:"
	},
	"attribute_idpname": {
		"en": "Org ID:"
	},
	"attribute_nrenname": {
		"en": "NREN-name:"
	},
	"attribute_fulldn": {
		"en": "Full-DN:"
	},
	"l10n_heading_aboutnren": {
		"en": "About NREN"
	},
	"l10n_heading_help": {
		"en": "Help"
	},
	"l10n_heading_nrenadvice": {
		"en": "'s Advice:"
	},
	"l10n_heading_logout": {
		"en": "You have been logged out of Confusa"
	},
	"l10n_text_logoutreturn1": {
		"en": "Return to"
	},
	"l10n_link_start": {
		"en": "start"
	},
	"l10n_heading_privnotice": {
		"en":	"Privacy notice"
	},
	"nren_unset_pt_text": {
		"en":	"The privacy-notice has not been set for your NREN. Someone should be hard at work doing this, in the meantime, send them an email and let them know."
	},
	"nren_unset_about_text": {
		"en":	"The about-NREN notice has not been set for your NREN. Someone should be hard at workd doing this. In the meantime, send them an email and let t hem know."
	},
	"nren_unset_help_text": {
		"en":	"The help-text for this NREN has not been set. Someone should be hard at work doing so. You can let them know via email."
	}
}
