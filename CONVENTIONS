		Conventions for hacking Confusa

In order to avoid unnecessary commits, this is a list over what we have
agreed upon is the "correct" way of doing things.

1) Commits
2) Naming conventions
	- Java
	- C (the convention used so far, out of all habit)
	- php (i.e. no particular convention, just let everything be a
	  mess)
	- PEAR (Several projects have adopted this)

3) Return values

  If the return is not checked, there is no point in returning anything.

  If anything check the return, and the function does not return
  anything, PHP will interpret this as 'true' (i.e. the function-call
  succeeded).

  Caveat: instead of relying upon return-values to describe errors, we
  should push Confusa towards a properly Exception-based model. That way
  we avoid the somewhat panicky 'exit(0);' found in the code:

  git grep "exit("
    lib/auth/confusa_auth.php:       exit(0);
    lib/key/cert_manager.php:        exit(0);
    lib/key/csr_lib.php:             exit(1);
    lib/key/csr_lib.php:             exit(1);
    lib/misc/config.php:             exit(1);
    lib/misc/config.php:             exit(1);
    www/framework.php:               exit(0);
    www/index.php:                   exit(0);
    www/key_upload.php:              exit(1);
    www/key_upload.php:              exit(1);
    www/key_upload.php:              exit(1);
    www/key_upload.php:              exit(1);
    www/key_upload.php:              exit(1);
    www/root_cert.php:               exit(1);
    www/tools.php:                   exit(1);


4) OO-model where-ever possible.

5) PHP5 specific. If we break PHP4 compatibility - good! PHP4 is
   considered broken in so many ways I do not want to
   start. SimpleSAMLphp requires PHP5 anyway.